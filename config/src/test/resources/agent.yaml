name: test-service
system: demo-system

user:
    list:
        - "a"
        - "b"

### http server
easeagent:
    server:
        # When the enabled value = false, agent will not start the http server
        # You can use -Deaseagent.server.enabled=[true | false] to override.
        enabled: true
        # http server port. You can use -Deaseagent.server.port=[port] to override.
        port: 9900
    health:
        readiness:
            # Enable health/readiness
            enabled: true
#  progress:
#    forwarded:
#      headers: X-Forwarded-For
#      headers: X-Location,X-Mesh-Service-Canary,X-Phone-Os

###
### default tracings reporter configuration
###
# get header from response headers then tag to tracing span
# format: observability.tracings.tag.response.headers.{key}={value}
# support ease mesh
# X-EG-Circuit-Breaker
# X-EG-Retryer
# X-EG-Rate-Limiter
# X-EG-Time-Limiter
observability:
    tracings:
        sampledByQPS: 100
        tag:
            response:
                headers:
                    eg:
                        0: X-EG-Circuit-Breaker
                        1: X-EG-Retryer
                        2: X-EG-Rate-Limiter
                        3: X-EG-Time-Limiter

plugin:
    hook:
        global:
            foundation:
                enabled: true
    integrability:
        global:
            # add service name to header enabled by name for easemesh
            addServiceNameHead:
                enabled: true
            # forwarded headers enabled.
            # headers see config: easeagent.progress.forwarded.headers.???=???
            forwarded:
                enabled: true
            # redirect the middleware address when env has address, see: com.megaease.easeagent.plugin.api.middleware.RedirectProcessor
            # about redirect: jdbc, kafka, rabbitmq, redis,
            redirect:
                enabled: true
        # -------------------- service name ---------------------
        ## add service name to header by name for easemesh. default name: X-Mesh-RPC-Service
    #    serviceName:
    #      addServiceNameHead:
    #        propagate:
    #          head: X-Mesh-RPC-Service
    observability:
        # -------------------- async ---------------------
        #    async:
        #      tracing:
        #        enabled: true
        # -------------------- access ---------------------
        access:
            metric:
                #        enabled: true
                #        interval: 30
                topic: application-log
                url: /application-log
        #        appendType: kafka
        # -------------------- elasticsearch redirect ---------------------
        elasticsearch:
            metric:
                #        enabled: true
                #        interval: 30
                topic: platform-metrics
                url: /platform-metrics
        #        appendType: kafka
        # -------------------- plugin global config ---------------------
        global:
            metric:
                enabled: true
                interval: 30
                topic: application-meter
                ## output by http
            #        appendType: console
            #        appendType: http
            tracing:
                enabled: true
        # -------------------- httpServlet ---------------------
        httpServlet:
            metric:
                #        enabled: true
                #        interval: 30
                topic: application-metrics
                url: /application-metrics
        #        appendType: kafka
        #      tracing:
        #        enabled: true
        # -------------------- request ---------------------
        ## httpclient tracing, httpclient and httpclient5
        #    httpclient:
        #      tracing:
        #        enabled: true
        ## okHttp tracing
        #    okHttp:
        #      tracing:
        #        enabled: true
        ## webclient tracing
        #    webclient:
        #      tracing:
        #        enabled: true
        ## feignClient tracing
        #    feignClient:
        #      tracing:
        #        enabled: true
        ## restTemplate tracing
        #    restTemplate:
        #      tracing:
        #        enabled: true
        # -------------------- jdbc ---------------------
        jdbc:
            #      tracing:
            #        enabled: true
            ## sql compress
            ## compress.enabled=true, can use md5Dictionary to compress
            ## compress.enabled=false, use original sql
            sql:
                compress:
                    enabled: true
            ## jdbc redirect
        #      redirect:
        #        enabled: true
        jdbcConnection:
            metric:
                #        enabled: true
                #        interval: 30
                topic: application-metrics
                url: /application-metrics
        #        appendType: kafka
        jdbcStatement:
            metric:
                #        enabled: true
                #        interval: 30
                topic: application-metrics
                url: /application-metrics
        #        appendType: kafka
        # ----------------------------------------------
        # if the plugin configuration is consistent with the global namespace,
        # do not add configuration items not commented out in this default configuration file.
        # otherwise, they can not be overridden by Global configuration in user's configuration file.
        # -------------------- jvm  ---------------------
        jvmGc:
            metric:
                #        enabled: true
                #        interval: 30
                topic: platform-metrics
                url: /platform-metrics
        #        appendType: kafka
        jvmMemory:
            metric:
                #        enabled: true
                #        interval: 30
                topic: platform-metrics
                url: /platform-metrics
        #        appendType: kafka
        # -------------------- kafka ---------------------
        kafka:
            # kafka tracing
            #      tracing:
            #        enabled: true
            # kafka metric
            metric:
                #        enabled: true
                #        interval: 30
                topic: platform-metrics
                url: /platform-metrics
            #        appendType: kafka
            # kafka redirect
        #      redirect:
        #        enabled: true
        ## md5Dictionary metric
        md5Dictionary:
            metric:
                #        enabled: true
                #        interval: 30
                topic: application-metrics
                url: /application-metrics
        #        appendType: kafka
        # -------------------- mongodb ---------------------
        mongodb:
            ## mongodb tracing
            #      tracing:
            #        enabled: true
            ## mongodb metric
            metric:
                #        enabled: true
                #        interval: 30
                topic: platform-metrics
                url: /platform-metrics
            #        appendType: kafka
            ## mongodb redirect
            #      redirect:
            #        enabled: true
            ## mongodb foundation
        #      foundation:
        #        enabled: true
        # -------------------- rabbitmq ---------------------
        rabbitmq:
            # rabbitmq tracing
            #      tracing:
            #        enabled: true
            # rabbitmq metric
            metric:
                #        enabled: true
                #        interval: 30
                topic: platform-metrics
                url: /platform-metrics
            #        appendType: kafka
            # rabbitmq redirect
        #      redirect:
        #        enabled: true
        # -------------------- redis ---------------------
        redis:
            # redis tracing
            #      tracing:
            #        enabled: true
            # redis metric
            metric:
                #        enabled: true
                #        interval: 30
                topic: platform-metrics
                url: /platform-metrics
            # redis redirect
        #      redirect:
        #        enabled: true
        # -------------------- springGateway ---------------------
        springGateway:
            # springGateway tracing
            #      tracing:
            #        enabled: true
            metric:
                #        enabled: true
                #        interval: 30
                topic: application-metrics
                url: /application-metrics
#        appendType: kafka

# -------------- output ------------------
## http/kafka/zipkin server host and port for tracing and metric
###### example ######
## http: [http|https]://127.0.0.1:8080/report
## kafka: 192.168.1.2:9092, 192.168.1.3:9092, 192.168.1.3:9092
## zipkin: [http|https]://127.0.0.1:8080/zipkin

reporter:
    outputServer:
        appendType: console
        bootstrapServer: 127.0.0.1:9092
        ## enabled=false: disable output tracing and metric
        ## enabled=true: output tracing and metric
        enabled: true
        ## username and password for http basic auth
        username: ''
        password: ''
        timeout: 1000
        ## enable=false: disable mtls
        ## enable=true: enable tls
        ## key, cert, ca_cert is enabled when tls.enable=true
        tls:
            enable: false
            key: ''
            cert: ''
            ca_cert: ''
    # --- redefine to output properties
    log:
        output:
            messageMaxBytes: 999900
            messageTimeout: 1000
            queuedMaxSize: 1000000
            queuedMaxSpans: 1000
            reportThread: 1
        ## sender.appendType config
        ## [http] send to http server
        ## [kafka] send to kafka
        ## [console] send to console
    #    sender:
    #      enabled: true
    #      url: /application-log
    #      appendType: console
    metric:
        ## reporter.metric.encoder=MetricJsonEncoder
        output:
            interval: 30
        ## topic for kafka use
        sender:
            topic: application-meter
    tracing:
        encoder: SpanJsonEncoder
        # --- redefine to output properties
        output:
            messageMaxBytes: 999900
            messageTimeout: 1000
            queuedMaxSize: 1000000
            queuedMaxSpans: 1000
            reportThread: 1
        ## sender.appendType config
        ## [http] send to http server
        ## [kafka] send to kafka
        ## [console] send to console
        sender:
            enabled: true
            ## topic for kafka use
            topic: log-tracing
            url: /application-tracing-log
#      appendType: http
#      appendType: console
