name=unknown-service
system=unknown-system

### http server
# When the enabled value = false, agent will not start the http server
# You can use -Deaseagent.server.enabled=[true | false] to override.
easeagent.server.enabled=true
# http server port. You can use -Deaseagent.server.port=[port] to override.
easeagent.server.port=9900

# Enable health/readiness
easeagent.health.readiness.enabled=true
#globalCanaryHeaders.serviceHeaders.mesh-app-backend.0=X-canary
###
### output server
###
# if set empty value, agent will not init kafka
observability.outputServer.bootstrapServer=127.0.0.1:9092
observability.outputServer.timeout=10000
observability.outputServer.enabled=true
###
### metrics
###
observability.metrics.enabled=true
# metrics access
observability.metrics.access.enabled=true
observability.metrics.access.interval=30
observability.metrics.access.topic=application-log
observability.metrics.access.appendType=kafka
# metrics request
observability.metrics.request.enabled=true
observability.metrics.request.interval=30
observability.metrics.request.topic=application-meter
observability.metrics.request.appendType=kafka
# metrics jdbc statement
observability.metrics.jdbcStatement.enabled=true
observability.metrics.jdbcStatement.interval=30
observability.metrics.jdbcStatement.topic=application-meter
observability.metrics.jdbcStatement.appendType=kafka
# metrics jdbc connection
observability.metrics.jdbcConnection.enabled=true
observability.metrics.jdbcConnection.interval=30
observability.metrics.jdbcConnection.topic=application-meter
observability.metrics.jdbcConnection.appendType=kafka
# metrics rabbit
observability.metrics.rabbit.enabled=true
observability.metrics.rabbit.interval=30
observability.metrics.rabbit.topic=platform-meter
observability.metrics.rabbit.appendType=kafka
# metrics kafka
observability.metrics.kafka.enabled=true
observability.metrics.kafka.interval=30
observability.metrics.kafka.topic=platform-meter
observability.metrics.kafka.appendType=kafka
# metrics redis
observability.metrics.redis.enabled=true
observability.metrics.redis.interval=30
observability.metrics.redis.topic=application-meter
observability.metrics.redis.appendType=kafka
# metrics jvmGc
observability.metrics.jvmGc.enabled=true
observability.metrics.jvmGc.interval=30
observability.metrics.jvmGc.topic=platform-meter
observability.metrics.jvmGc.appendType=kafka
# metrics jvmMemory
observability.metrics.jvmMemory.enabled=true
observability.metrics.jvmMemory.interval=30
observability.metrics.jvmMemory.topic=platform-meter
observability.metrics.jvmMemory.appendType=kafka
# metrics md5Dictionary
observability.metrics.md5Dictionary.enabled=true
# 5 minutes
observability.metrics.md5Dictionary.interval=300
observability.metrics.md5Dictionary.topic=application-meter
observability.metrics.md5Dictionary.appendType=kafka
###
### tracings
###
observability.tracings.enabled=true
observability.tracings.sampledByQPS=100
observability.tracings.output.enabled=true

# [zipkin]: send data to zipkin server
# [system]: send data to kafka
observability.tracings.output.target=system
# zipkin receive data
observability.tracings.output.target.zipkinUrl=http://localhost:9411/api/v2/spans

observability.tracings.output.topic=log-tracing
# 1000000 - 100
observability.tracings.output.messageMaxBytes=999900
observability.tracings.output.reportThread=1
observability.tracings.output.queuedMaxSpans=1000
observability.tracings.output.queuedMaxSize=1000000
observability.tracings.output.messageTimeout=1000
# tracings request
observability.tracings.request.enabled=true
# tracings remoteInvoke
observability.tracings.remoteInvoke.enabled=true
# tracings kafka
observability.tracings.kafka.enabled=true
observability.tracings.kafka.servicePrefix=kafka
# tracings jdbc
observability.tracings.jdbc.enabled=true
# tracings redis
observability.tracings.redis.enabled=true
observability.tracings.redis.servicePrefix=redis
# tracings rabbit
observability.tracings.rabbit.enabled=true
observability.tracings.rabbit.servicePrefix=rabbitmq
