name=demo-service
system=demo-system
### http server
# When the enabled value = false, agent will not start the http server
# You can use -Deaseagent.server.enabled=[true | false] to override.
easeagent.server.enabled=true
# http server port. You can use -Deaseagent.server.port=[port] to override.
easeagent.server.port=9900
# Enable health/readiness
easeagent.health.readiness.enabled=true
# forwarded headers page
# Pass-through headers from the root process all the way to the end
# format: easeagent.progress.forwarded.headers={headerName}
#easeagent.progress.forwarded.headers=X-Forwarded-For
#easeagent.progress.forwarded.headers=X-Location,X-Mesh-Service-Canary,X-Phone-Os
###
### default tracings reporter configuration
###
observability.tracings.sampledByQPS=100
# get header from response headers then tag to tracing span
# format: observability.tracings.tag.response.headers.{key}={value}
# support ease mesh
# X-EG-Circuit-Breaker
# X-EG-Retryer
# X-EG-Rate-Limiter
# X-EG-Time-Limiter
observability.tracings.tag.response.headers.eg.0=X-EG-Circuit-Breaker
observability.tracings.tag.response.headers.eg.1=X-EG-Retryer
observability.tracings.tag.response.headers.eg.2=X-EG-Rate-Limiter
observability.tracings.tag.response.headers.eg.3=X-EG-Time-Limiter

# -------------------- plugin global config ---------------------
plugin.observability.global.tracing.enabled=true
plugin.observability.global.metric.enabled=true
plugin.observability.global.metric.interval=30
plugin.observability.global.metric.topic=application-meter
plugin.observability.global.metric.url=/application-meter
# plugin.observability.global.metric.appendType=console
## output by http
#plugin.observability.global.metric.appendType=http
# add service name to header enabled by name for easemesh
plugin.integrability.global.addServiceNameHead.enabled=true
# redirect the middleware address when env has address, see: com.megaease.easeagent.plugin.api.middleware.RedirectProcessor
# about redirect: jdbc, kafka, rabbitmq, redis,
plugin.integrability.global.redirect.enabled=true
# forwarded headers enabled.
# headers see config: easeagent.progress.forwarded.headers.???=???
plugin.integrability.global.forwarded.enabled=true
plugin.hook.global.foundation.enabled=true


# ----------------------------------------------
# if the plugin configuration is consistent with the global namespace,
# do not add configuration items not commented out in this default configuration file.
# otherwise, they can not be overridden by Global configuration in user's configuration file.

#
# -------------------- jvm  ---------------------
# plugin.observability.jvmGc.metric.enabled=true
# plugin.observability.jvmGc.metric.interval=30
plugin.observability.jvmGc.metric.topic=platform-metrics
plugin.observability.jvmGc.metric.url=/platform-metrics
# plugin.observability.jvmGc.metric.appendType=kafka
# plugin.observability.jvmMemory.metric.enabled=true
# plugin.observability.jvmMemory.metric.interval=30
plugin.observability.jvmMemory.metric.topic=platform-metrics
plugin.observability.jvmMemory.metric.url=/platform-metrics
# plugin.observability.jvmMemory.metric.appendType=kafka
#
# -------------------- async ---------------------
# plugin.observability.async.tracing.enabled=true
#
# -------------------- elasticsearch redirect ---------------------
# plugin.integrability.elasticsearch.redirect.enabled=true
# plugin.observability.elasticsearch.tracing.enabled=true
# elasticsearch metric
# plugin.observability.elasticsearch.metric.enabled=true
# plugin.observability.elasticsearch.metric.interval=30
plugin.observability.elasticsearch.metric.topic=platform-metrics
plugin.observability.elasticsearch.metric.url=/platform-metrics
# plugin.observability.elasticsearch.metric.appendType=kafka
#
# -------------------- httpServlet ---------------------
# plugin.observability.httpServlet.tracing.enabled=true
# plugin.observability.httpServlet.metric.enabled=true
# plugin.observability.httpServlet.metric.interval=30
plugin.observability.httpServlet.metric.topic=application-metrics
plugin.observability.httpServlet.metric.url=/application-metrics
# plugin.observability.httpServlet.metric.appendType=kafka
#
# -------------------- jdbc ---------------------
## jdbc tracing
# plugin.observability.jdbc.tracing.enabled=true
# jdbcStatement metric
# plugin.observability.jdbcStatement.metric.enabled=true
# plugin.observability.jdbcStatement.metric.interval=30
plugin.observability.jdbcStatement.metric.topic=application-metrics
plugin.observability.jdbcStatement.metric.url=/application-metrics
# plugin.observability.jdbcStatement.metric.appendType=kafka
## jdbcConnection metric
# plugin.observability.jdbcConnection.metric.enabled=true
# plugin.observability.jdbcConnection.metric.interval=30
plugin.observability.jdbcConnection.metric.topic=application-metrics
plugin.observability.jdbcConnection.metric.url=/application-metrics
# plugin.observability.jdbcConnection.metric.appendType=kafka
## sql compress
## compress.enabled=true, can use md5Dictionary to compress
## compress.enabled=false, use original sql
plugin.observability.jdbc.sql.compress.enabled=true

## md5Dictionary metric
# plugin.observability.md5Dictionary.metric.enabled=true
# plugin.observability.md5Dictionary.metric.interval=30
plugin.observability.md5Dictionary.metric.topic=application-metrics
plugin.observability.md5Dictionary.metric.url=/application-metrics
# plugin.observability.md5Dictionary.metric.appendType=kafka
## jdbc redirect
# plugin.integrability.jdbc.redirect.enabled=true
#
# -------------------- kafka ---------------------
# kafka tracing
# plugin.observability.kafka.tracing.enabled=true
# kafka metric
# plugin.observability.kafka.metric.enabled=true
# plugin.observability.kafka.metric.interval=30
plugin.observability.kafka.metric.topic=platform-metrics
plugin.observability.kafka.metric.url=/platform-metrics
# plugin.observability.kafka.metric.appendType=kafka
# kafka redirect
# plugin.integrability.kafka.redirect.enabled=true
#
# -------------------- rabbitmq ---------------------
# rabbitmq tracing
# plugin.observability.rabbitmq.tracing.enabled=true
# rabbitmq metric
# plugin.observability.rabbitmq.metric.enabled=true
# plugin.observability.rabbitmq.metric.interval=30
plugin.observability.rabbitmq.metric.topic=platform-metrics
plugin.observability.rabbitmq.metric.url=/platform-metrics
# plugin.observability.rabbitmq.metric.appendType=kafka
# rabbitmq redirect
# plugin.integrability.rabbitmq.redirect.enabled=true
#
# -------------------- redis ---------------------
# redis tracing
# plugin.observability.redis.tracing.enabled=true
# redis metric
# plugin.observability.redis.metric.enabled=true
# plugin.observability.redis.metric.interval=30
plugin.observability.redis.metric.topic=platform-metrics
plugin.observability.redis.metric.url=/platform-metrics
# plugin.observability.redis.metric.appendType=kafka
# redis redirect
# plugin.integrability.redis.redirect.enabled=true
#
# -------------------- springGateway ---------------------
# springGateway tracing
# plugin.observability.springGateway.tracing.enabled=true
# springGateway metric
# plugin.observability.springGateway.metric.enabled=true
# plugin.observability.springGateway.metric.interval=30
plugin.observability.springGateway.metric.topic=application-metrics
plugin.observability.springGateway.metric.url=/application-metrics
# plugin.observability.springGateway.metric.appendType=kafka
#
# -------------------- request ---------------------
## httpclient tracingï¼šhttpclient and httpclient5
# plugin.observability.httpclient.tracing.enabled=true
## okHttp tracing
# plugin.observability.okHttp.tracing.enabled=true
## webclient tracing
# plugin.observability.webclient.tracing.enabled=true
## feignClient tracing
# plugin.observability.feignClient.tracing.enabled=true
## restTemplate tracing
# plugin.observability.restTemplate.tracing.enabled=true
#
# -------------------- access ---------------------
## access: servlet and spring gateway
# plugin.observability.access.metric.enabled=true
# plugin.observability.access.metric.interval=30
plugin.observability.access.metric.topic=application-log
plugin.observability.access.metric.url=/application-log
# plugin.observability.access.metric.appendType=kafka
#
# -------------------- service name ---------------------
## add service name to header by name for easemesh. default name: X-Mesh-RPC-Service
# plugin.integrability.serviceName.addServiceNameHead.propagate.head=X-Mesh-RPC-Service
#
# -------------------- mongodb ---------------------
## mongodb tracing
# plugin.observability.mongodb.tracing.enabled=true
## mongodb metric
# plugin.observability.mongodb.metric.enabled=true
# plugin.observability.mongodb.metric.interval=30
plugin.observability.mongodb.metric.topic=platform-metrics
plugin.observability.mongodb.metric.url=/platform-metrics
# plugin.observability.mongodb.metric.appendType=kafka
## mongodb redirect
# plugin.integrability.mongodb.redirect.enabled=true
## mongodb foundation
# plugin.hook.mongodb.foundation.enabled=true

# -------------- output ------------------
## http/kafka/zipkin server host and port for tracing and metric
###### example ######
## http: [http|https]://127.0.0.1:8080/report
## kafka: 192.168.1.2:9092, 192.168.1.3:9092, 192.168.1.3:9092
## zipkin: [http|https]://127.0.0.1:8080/zipkin

reporter.outputServer.bootstrapServer=127.0.0.1:9092
reporter.outputServer.appendType=console
reporter.outputServer.timeout=1000

## enabled=false: disable output tracing and metric
## enabled=true: output tracing and metric
reporter.outputServer.enabled=true

## username and password for http basic auth
reporter.outputServer.username=
reporter.outputServer.password=
## enable=false: disable mtls
## enable=true: enable tls
## key, cert, ca_cert is enabled when tls.enable=true
reporter.outputServer.tls.enable=false
reporter.outputServer.tls.key=
reporter.outputServer.tls.cert=
reporter.outputServer.tls.ca_cert=


# --- redefine to output properties
reporter.log.output.messageMaxBytes=999900
reporter.log.output.reportThread=1
reporter.log.output.queuedMaxSpans=1000
reporter.log.output.queuedMaxSize=1000000
reporter.log.output.messageTimeout=1000

## sender.appendType config
## [http] send to http server
## [kafka] send to kafka
## [console] send to console
## reporter.log.sender.appendType=console
## enabled=true:
# reporter.log.sender.enabled=true
# reporter.log.sender.url=/application-log


## sender.appendType config
## [http] send to http server
## [kafka] send to kafka
## [console] send to console
# reporter.tracing.sender.appendType=http
# reporter.tracing.sender.appendType=console

## enabled=true:
reporter.tracing.sender.enabled=true

## url is only used in http
## append to outputServer.bootstrapServer
###### example ######
## reporter.outputServer.bootstrapServer=http://127.0.0.1:8080/report
## reporter.tracing.sender.url=/tracing
## final output url: http://127.0.0.1:8080/report/tracing
## if url is start with [http|https], url override reporter.outputServer.bootstrapServer
###### example ######
## reporter.outputServer.bootstrapServer=http://127.0.0.1:8080/report
## reporter.tracing.sender.url=http://127.0.0.10:9090/tracing
## final output url: http://127.0.0.10:9090/tracing
reporter.tracing.sender.url=/application-tracing-log

## topic for kafka use
reporter.tracing.sender.topic=application-tracing-log

reporter.tracing.encoder=SpanJsonEncoder

# --- redefine to output properties
reporter.tracing.output.messageMaxBytes=999900
reporter.tracing.output.reportThread=1
reporter.tracing.output.queuedMaxSpans=1000
reporter.tracing.output.queuedMaxSize=1000000
reporter.tracing.output.messageTimeout=1000

## sender.appendType config
## [http] send to http server
## [metricKafka] send to kafka
## [console] send to console
#reporter.metric.sender.appendType=http
#reporter.metric.sender.appendType=console

## url is only used in http
## append to outputServer.bootstrapServer
###### example ######
## reporter.outputServer.bootstrapServer=http://127.0.0.1:8080/report
## reporter.metric.sender.url=/metric
## final output url: http://127.0.0.1:8080/report/metric
## if url is start with [http|https], url override reporter.outputServer.bootstrapServer
###### example ######
## reporter.outputServer.bootstrapServer=http://127.0.0.1:8080/report
## reporter.metric.sender.url=http://127.0.0.10:9090/metric
## final output url: http://127.0.0.10:9090/metric
#reporter.metric.sender.url=/metrics

## topic for kafka use
reporter.metric.sender.topic=application-meter

#reporter.metric.encoder=MetricJsonEncoder
reporter.metric.output.interval=30
